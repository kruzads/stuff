library(reshape2)
library(ggplot2)
library(tidyr)
library(plyr)
library(tidyverse)

#############################################################################################################################################################################
################################# GRÁFICO PARA COMPARAR GOLOS MARCADOS EM CASA E FORA COM OS ESPERADOS PARA UMA DISTRIBUIÇÃO POISSON (FIGURA 2.1) ###########################

#CASA
probs_h<-dpois(0:6,mean(liga14_20$y_g1)) 
esperado_h<-306*probs_h

#FORA
probs_a<-dpois(0:6,mean(liga14_20$y_g2)) 
esperado_a<-306*probs_a

a<- as.data.frame(table(factor(liga14_20$y_g1, levels=0:max(liga14_20$y_g1,liga14_20$y_g2))))
b<- as.data.frame(table(factor(liga14_20$y_g2, levels=0:max(liga14_20$y_g1,liga14_20$y_g2))))

golos <- 0:max(liga14_20$y_g1,liga14_20$y_g2)
Casa<-a$Freq
Fora<-b$Freq
df1 <- data.frame(Casa, Fora, golos)
df2 <- melt(df1, id.vars='golos') #DATAFRAME COM OS GOLOS MARCADOS, O LOCAL E A FREQUÊNCIA RELATIVA

cor<-c(rep("green",7),rep("blue",7))
df3<-data.frame(df2,c(esperado_h,esperado_a),cor)
colnames(df3)[4]<-"pontos.Esperado"

df3$value<-df3$value/306
df3$pontos.Esperado<-c(probs_a,probs_h)

ggplot(df3, aes(x=golos, y=value, fill=variable)) + geom_bar(stat='identity', position='dodge',colour="Black") + 
  scale_x_continuous(labels=as.character(golos),breaks=golos) + 
  labs(x="Golos por Jogo", y="Frequência Relativa") +
  scale_y_continuous(breaks = seq(from = 0, to = 1, by = 0.05), limits = c(0,0.4))+
  geom_point(data = df3,aes(y=pontos.Esperado,col=cor),size=3) + 
  geom_line(data=df3,aes(x=golos,y=pontos.Esperado,col=cor),size=1.5) +
  scale_fill_manual("Equipa", values = c("Casa" = "light green", "Fora" = "light blue"))+
  scale_colour_manual(values = c("green" = "dark green", "blue" = "dark blue"), name = "cor") + tema



#############################################################################################################################################################################
######## GRÁFICOS DE VARIAÇÃO DOS PARÂMETROS ATT E DEF DA EQUIPA 1 E DO PARÂMETRO HOME POR ITERAÇÃO E GRÁFICOS DE DENSIDADE DE PROBABILIDADE DOS MESMOS (FIGURA 6.1) ########

MCMCtrace(nimbleMCMC_fut$samples, params = c('home',"att[1]","def[1]"), ISB = FALSE, exact = TRUE, pdf = FALSE, lwd_den = 3, lty_pr = 2,
          sz_txt = 1.3, sz_ax = 2, sz_ax_txt = 1.2, sz_tick_txt = 1.2, sz_main_txt = 1.3)

#############################################################################################################################################################################
############################################## RESUMO DAS CARACTERÍSTICAS DOS PARÂMETROS PARA AS EQUIPAS 4, 9 E 13 (FIGURA 6.2) #############################################

MCMCsummary(nimbleMCMC_fut$samples, params = c("home","att[4]","def[4]","att[9]","def[9]","att[13]","def[13]"), round=4, ISB = FALSE, exact = TRUE)

#############################################################################################################################################################################
####################################### INTERVALOS DE 95% DE CREDIBILIDADE DE CAUDAS IGUAIS PARA OS PARÂMETROS ATT E DEF (FIGURA 6.3) #######################################

index<-1:18
lista_equipas <- c("Académica","Arouca","Belenenses","Benfica","Boavista","Braga","Estoril","FC Porto", "Gil Vicente","Marítimo","Moreirense","Nacional",
                   "Paços Ferreira","Penafiel","Rio Ave", "Sporting","Vitória FC","Vitória SC")

MCMCplot(nimbleMCMC_fut$samples, params = 'att', labels = paste(index,": ",lista_equipas,sep="" ), main="Intervalos de 95% de credibilidade de caudas iguais",  
         xlab = "Parâmetro de ataque", rank=TRUE, guide_lines = TRUE, horiz = FALSE)
MCMCplot(nimbleMCMC_fut$samples, params = 'def', labels = paste(index,": ",lista_equipas,sep="" ), main="Intervalos de 95% de credibilidade de caudas iguais",  
         xlab = "Parâmetro de defesa", rank=TRUE, guide_lines = TRUE, horiz = FALSE)
         


#############################################################################################################################################################################
############################################################################  DISTRIBUIÇÃO PREDITIVA ########################################################################
         
         
#PARA MULTIPLAS CADEIAS

n<-dim(nimbleMCMC_fut[[1]]$chain1)[1] #igual numero de valores simulados para todas as cadeias, 5000 neste caso

y.pred1.chain1<-matrix(0,306,n)
y.pred1.chain2<-matrix(0,306,n)
y.pred1.chain3<-matrix(0,306,n)

y.pred2.chain1<-matrix(0,306,n)
y.pred2.chain2<-matrix(0,306,n)
y.pred2.chain3<-matrix(0,306,n)

set.seed(1)
for(game in 1:306){
  y.pred1.chain1[game,]<-rpois(n,nimbleMCMC_fut[[1]]$chain1[, paste("theta[",game,", 1]", sep="")])
  y.pred1.chain2[game,]<-rpois(n,nimbleMCMC_fut[[1]]$chain2[, paste("theta[",game,", 1]", sep="")])
  y.pred1.chain3[game,]<-rpois(n,nimbleMCMC_fut[[1]]$chain3[, paste("theta[",game,", 1]", sep="")])
  
  y.pred2.chain1[game,]<-rpois(n,nimbleMCMC_fut[[1]]$chain1[, paste("theta[",game,", 2]", sep="")])
  y.pred2.chain2[game,]<-rpois(n,nimbleMCMC_fut[[1]]$chain2[, paste("theta[",game,", 2]", sep="")])
  y.pred2.chain3[game,]<-rpois(n,nimbleMCMC_fut[[1]]$chain3[, paste("theta[",game,", 2]", sep="")])
}
         
#Arrays/matrizes de 3d (jogos,iteração,cadeia)
y.pred1<-array(c(y.pred1.chain1,y.pred1.chain2,y.pred1.chain3),c(306,5000,3))
y.pred2<-array(c(y.pred2.chain1,y.pred2.chain2,y.pred2.chain3),c(306,5000,3))         

#############################################################################################################################################################################
################################################################## PREDICTIVE POSTERIOR CHECK (FIGURA 6.7) ##################################################################
  
library(bayesplot)

data2<-t(y.pred1[,2000:2500,1]-y.pred2[,2000:2500,1])

color_scheme_set("brightblue")
ppc_dens_overlay(liga14_20$y_g1-liga14_20$y_g2, data2) + yaxis_text()+
  labs(x="Diferença de golos",y="Dens. Preditiva Posteriori") + tema

tema <- theme(legend.title = element_text(colour = "steelblue", face = "bold", family = "open"), legend.text = element_text(colour = "black", family = "open", size = (12)),
              axis.title = element_text(family = "open", size = (12), colour = "steelblue4", face = "bold"), axis.text = element_text(family = "open", colour = "black", 
              size = (10),), legend.position = c(0.9, 0.8),legend.key.size = unit(0.7, 'cm'))


############################################################################# TRATAMENTO DE DADOS ###########################################################################
########################################################### VERIFICAR RESULTADOS PARA TODAS AS ITERAÇÕES DE CADA JOGO #######################################################
  
vict_home<-array(0,c(306,5000,3)) #vitoria da equipa de fora 
ties_home<-array(0,c(306,5000,3)) #empate da equipa de casa
ties_away<-array(0,c(306,5000,3)) #empate da equipa de fora
vict_away<-array(0,c(306,5000,3)) #vitoria da equipa de fora

#guarda nessa posição da matriz o índice da equipa se o resultado ocorre
for(game in 1:306){
  for(iter in 1:n){
    for(chain in 1:3){
      if(y.pred1[game,iter,chain] > y.pred2[game,iter,chain]){
        vict_home[game,iter,chain]<-liga14_20$h_g[game]
        } else if(y.pred1[game,iter,chain] == y.pred2[game,iter,chain]){
          ties_home[game,iter,chain]<-liga14_20$h_g[game]
          ties_away[game,iter,chain]<-liga14_20$a_g[game]
        } else if(y.pred1[game,iter,chain] < y.pred2[game,iter,chain]){
          vict_away[game,iter,chain]<-liga14_20$a_g[game]
        }
    }
  }
}

############################################################################################################################################################################
#Usado para calcular as probabilidades de vitoria, derrota e empate (trabalhar com cadeia 1)

#diferença de golos(casa - fora)
pred.diff<-matrix(0,306,n) 
pred.diff<-y.pred1.chain1-y.pred2.chain1


prob_vict_casa<-matrix(0,306,1) #Probabilidade de vitória da equipa de casa para cada jogo
prob_vict_fora<-matrix(0,306,1) #Probabilidade de vitória da equipa de fora para cada jogo
prob_empate<-matrix(0,306,1) #Probabilidade de empate  para cada jogo

for(game in 1:306){
  prob_vict_casa[game]<-sum(pred.diff[game,] > 0)/n
  prob_vict_fora[game]<-sum(pred.diff[game,] < 0)/n
  prob_empate[game]<-sum(pred.diff[game,] == 0)/n
}

#DE FINETTI SCORE / BRIER SCORE
brier_score <- sum( (prob_vict_casa - liga14_20$Vitoria_casa)^2 + (prob_vict_fora - liga14_20$Vitoria_fora)^2 + (prob_empate - liga14_20$Empate)^2 )/nrow(prob_vict_casa)



