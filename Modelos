
#PACOTES EM USO
library(nimble, warn.conflicts = FALSE) #PACOTE NIMBLE PARA EXECUTAR OS MODELOS
library(MCMCvis)                        #DESENHAR GRÁFICOS COM OS DADOS PROVENIENTES DO MCMC
library(readxl)                         #LÊ O FICHEIRO EXCEL


#EQUIPAS PARTICIPANTES NA TEMPORADA 2014-2015
lista_equipas <- c("Académica","Arouca","Belenenses","Benfica","Boavista","Braga","Estoril","FC Porto", "Gil Vicente","Marítimo","Moreirense","Nacional","Paços Ferreira",
                   "Penafiel","Rio Ave", "Sporting","Vitória FC","Vitória SC")

# DADOS (SÓ SE USA A 1ª TEMPORADA)
liga14_20<-liga14_20[1:306,]

# O MODELO É DEFINIDO AQUI DENTRO
futebolCode <- nimbleCode({
  
  # VEROSIMILHANÇA E MODELO DOS EFEITOS ALEATÓRIOS PARA A PROPENSIDADE DE MARCAÇÃO DE GOLOS
  for (g in 1:ngames) {
    # DISTRIBUIÇÃO ATRIBUÍDA AOS GOLOS MARCADOS OBSERVADOS PARA AS EQUIPAS DE CASA E FORA NO JOGO G - POISSON
    y1[g] ~ dpois(theta[g,1])
    y2[g] ~ dpois(theta[g,2])
    # INTENSIDADE DE MARCAÇÃO MÉDIAS (TEM EM CONTA A MISTURA DE COMPONENTES)
    log(theta[g,1]) <-  home + att[hometeam[g]] + def[awayteam[g]] 
    log(theta[g,2]) <-  att[awayteam[g]] + def[hometeam[g]]        
}

  # DISTRIBUIÇÃO A PRIORI PARA O EFEITO HOME
  home ~ dnorm(0,0.0001)
  # RESTRIÇÃO SOMA ZERO
  for (t in 1:nteams){
    att.star[t] ~ dnorm(mu.att,tau.att)
    def.star[t] ~ dnorm(mu.def,tau.def)
    att[t] <- att.star[t] - mean(att.star[1:nteams])
    def[t] <- def.star[t] - mean(def.star[1:nteams])
  }

  # DISTRIBUIÇÕES A PRIORI PARA OS EFEITOS ALEATÓRIOS
  mu.att ~ dnorm(0,0.001)
  mu.def ~ dnorm(0,0.001)
  tau.att ~ dgamma(0.01,0.01)
  tau.def ~ dgamma(0.01,0.01)

}) # FIM DO MODELO


#CONSTANTES DO MODELO (Nº JOGOS, Nº EQUIPAS, LOCALIZAÇÃO DOS INDICES E TEMPORADA)
futebolConsts <- list(ngames = 306, nteams = 18, hometeam=liga14_20$h_g, awayteam=liga14_20$a_g, season=liga14_20$Temporada)

#DADOS DOS GOLOS MARCADOS OBSERVADOS
futebolData <- list(y1 = liga14_20$y_g1, y2=liga14_20$y_g2)

#VALORES INICIAIS PARA OS PARÂMETROS (1 CADEIA)
# futebolInits <- list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1, theta = matrix(1,306,2), att.star = rep(1,18), def.star = rep(1,18))

#VALORES INICIAIS PARA OS PARÂMETROS (3 CADEIAS COM VALORES INICIAIS DIFERENTES)
futebolInits <- list(list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1, theta = matrix(1,306,2), att.star = rep(1,18), def.star = rep(1,18)),
                list(home = -0.9, mu.att = -0.6, mu.def = -0.6, tau.att = 0.6, tau.def = 0.6, theta = matrix(2,306,2), att.star = rep(0,18), def.star = rep(0,18)),
                list(home = 1, mu.att = 1, mu.def = 1, tau.att = 0.001, tau.def = 0.001, theta = matrix(5,306,2), att.star = rep(0.4,18), def.star = rep(0.4,18)))

#PARÂMETROS PARA GUARDAR NA MATRIZ
futebolMonitor <- c("theta","att","home","def")  #POISSON

start.time <- Sys.time() 

#EXECUTA O MCMC
nimbleMCMC_fut <- nimbleMCMC(code = futebolCode, constants = futebolConsts, inits= futebolInits,data = futebolData, monitors = futebolMonitor, niter = 100000, 
                             nburnin = 50000, thin=10, nchains=3, samplesAsCodaMCMC=TRUE, WAIC = TRUE)
                             
end.time <- Sys.time()

# CALCULA O TEMPO DE EXECUÇÃO DE EXECUÇÃO DO MCMC
time.taken <- end.time - start.time
time.taken

#############################################################################################################################################################################
################################################################# MODELO POISSON INFLACIONADA DE ZEROS ######################################################################
    

#DEFINE A DISTRIBUIÇÃO POISSON INFLACIONADA DE ZEROS PARA PODER SER USADA
dZIP <- nimbleFunction(
  run = function(x = integer(), lambda = double(0), zeroProb = double(), log = logical(0, default = 0)) {
    returnType(double())
    ## First handle non-zero data
    if (x != 0) {
      ## return the log probability if log = TRUE
      if (log) return(dpois(x, lambda, log = TRUE) + log(1 - zeroProb))
      ## or the probability if log = FALSE
      else return((1 - zeroProb) * dpois(x, lambda, log = FALSE))
    }
    ## From here down we know x is 0
    totalProbZero <- zeroProb + (1 - zeroProb) * dpois(0, lambda, log = FALSE)
    if (log) return(log(totalProbZero))
    return(totalProbZero)
  })

#ZIP ALEATORIA - GERA AMOSTRAS ALEATÓRIAS SEGUNDO ESTA DISTRIBUIÇÃO
rZIP <- nimbleFunction(
  run = function(n = integer(), lambda = double(0), zeroProb = double()) {
    returnType(integer())
    isStructuralZero <- rbinom(1, prob = zeroProb, size = 1)
    if (isStructuralZero) return(0)
    return(rpois(1, lambda))
  })

#REGISTA AS FUNÇÕES NO NIMBLE (dzip e rzip)
registerDistributions(list(
  dZIP = list(
    BUGSdist = "dZIP(lambda, zeroProb)",
    discrete = TRUE,
    range = c(0, Inf),
    types = c('value = integer()', 'lambda = double(0)', 'zeroProb = double()')
  )))

                             
futebolCode <- nimbleCode({
  
  # LIKELIHOOD AND RANDOM EFFECT MODEL FOR THE SCORING PROPENSITY
  for (g in 1:ngames) {
    # OS DADOS OBSERVADOS SEGUEM A DISTRBUIÇÃO DE POISSON INFLACIONADA
    y1[g] ~ dZIP(lambda1[g], zeroProb=p1 ) #p1 - PROBABILIDADE DE ZEROS ADICIONAIS PARA A EQUIPA DE CASA
    y2[g] ~ dZIP(lambda2[g], zeroProb=p2 ) #p2 - PROBABILIDADE DE ZEROS ADICIONAIS PARA A EQUIPA DE CASA
    
    log(lambda1[g]) <- home + att[hometeam[g]] + def[awayteam[g]] 
    log(lambda2[g]) <- att[awayteam[g]] + def[hometeam[g]]        
  }

  home ~ dnorm(0,0.0001)
  # DISTRIBUIÇÕES A PRIORI PARA AS PROBABILIDADES DE ZEROS ADICIONAIS
  p1 ~ dunif(0,1)
  p2 ~ dunif(0,1)
  
  for (t in 1:nteams){
    att.star[t] ~ dnorm(mu.att,tau.att)
    def.star[t] ~ dnorm(mu.def,tau.def)
    att[t] <- att.star[t] - mean(att.star[1:nteams])
    def[t] <- def.star[t] - mean(def.star[1:nteams])
  }
  
  mu.att ~ dnorm(0,0.001)
  mu.def ~ dnorm(0,0.001)
  tau.att ~ dgamma(0.01,0.01)
  tau.def ~ dgamma(0.01,0.01)
  
})

futebolConsts <- list(ngames = 306, nteams = 18, hometeam=liga14_20$h_g, awayteam=liga14_20$a_g)

futebolData <- list(y1 = liga14_20$y_g1, y2=liga14_20$y_g2)

# 1 CADEIA
futebolInits <- list(home = -2, p1 = 0.7, p2 = 0.7, mu.att = 1, mu.def = 1, tau.att =  0.001, tau.def =  0.001, lambda1 = rep(5,306), lambda2 = rep(5,306), 
                     att.star = rep(0.4,18), def.star = rep(0.4,18))

# 3 CADEIAS
futebolInits <- list(list(home = 0, p1 = 0, p2 = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1, lambda1 = rep(1,306),lambda2 = rep(1,306), 
                          att.star = rep(1,18), def.star = rep(1,18)),
                     list(home = 5, p1 = 0.2, p2 = 0.2, mu.att = -0.6, mu.def = -0.6, tau.att = 0.6, tau.def = 0.6, lambda1 = rep(2,306),lambda2 = rep(2,306), 
                          att.star = rep(0.2,18), def.star = rep(0.2,18)),
                     list(home = -2, p1 = 0.7, p2 = 0.7, mu.att = 1, mu.def = 1, tau.att =  0.001, tau.def =  0.001, lambda1 = rep(5,306),lambda2 = rep(5,306), 
                          att.star = rep(0.4,18), def.star = rep(0.4,18)))

futebolMonitor <- c("lambda1","lambda2","p1","p2","att","home","def")

nimbleMCMC_fut<-nimbleMCMC(code = futebolCode, constants = futebolConsts, inits= futebolInits, data = futebolData, monitors = futebolMonitor, 
                           niter = 100000, nburnin = 50000, thin=10, nchains=3, WAIC=TRUE, samplesAsCodaMCMC = TRUE )

#############################################################################################################################################################################
############################################################### MODELO DE MISTURA DOS HIPERPARÂMETROS #######################################################################

futebolCode <- nimbleCode({
  
  # VEROSIMILHANÇA E MODELO DOS EFEITOS ALEATÓRIOS PARA A PROPENSIDADE DE MARCAÇÃO DE GOLOS
  for (g in 1:ngames) {
    # OS DADOS OBSERVADOS SEGUEM A DISTRBUIÇÃO DE POISSON
    y1[g] ~ dpois(theta[g,1])
    y2[g] ~ dpois(theta[g,2])
    # Average Scoring intensities (accounting for mixing components)
    log(theta[g,1]) <-  home + att[hometeam[g]] + def[awayteam[g]] 
    log(theta[g,2]) <-  att[awayteam[g]] + def[hometeam[g]]        
  }

  home ~ dnorm(0,0.0001)
  
  # PARÂMETROS DE MISTURA E COMPONENTES (RESTRIÇÃO SOMA ZERO) 
  for (t in 1:nteams){
    grp.att[t] ~ dcat(p.att[t,1:3])
    grp.def[t] ~ dcat(p.def[t,1:3])
    att[t] ~ dt(mu.att[grp.att[t]],tau.att[grp.att[t]],4)
    def[t] ~ dt(mu.def[grp.def[t]],tau.def[grp.def[t]],4)
    att.star[t] <- att[t] - mean(att[1:nteams])
    def.star[t] <- def[t] - mean(def[1:nteams])
    
    # DISTRIBUIÇÕES A PRIORI PARA O PARÂMETRO DE MISTURA (ESPECIFICO PARA CADA EQUIPA)
    p.att[t,1:3] ~ ddirch(prior.att[t,1:3])
    p.def[t,1:3] ~ ddirch(prior.def[t,1:3])
  }
  
  # DISTRIBUIÇÕES A PRIORI PARA OS EFEITOS ALEATÓRIOS
  # GRUPO 1: EQUIPAS PIORES CLASSIFICADAS
  mu.att[1] ~ T(dnorm(0,0.001),-3,0)
  mu.def[1] ~ T(dnorm(0,0.001),0,3)
  tau.att[1] ~ dgamma(0.01,0.01)
  tau.def[1] ~ dgamma(0.01,0.01)
  
  # GRUPO 2: EQUIPAS DE MEIO DA TABELA
  mu.att[2] <-0
  mu.def[2] <-0
  tau.att[2] ~ dgamma(0.01,0.01)
  tau.def[2] ~ dgamma(0.01,0.01)
  
  # GRUPO 3: MELHORES EQUIPAS
  mu.att[3] ~ T(dnorm(0,0.001),0,3)
  mu.def[3] ~ T(dnorm(0,0.001),-3,0)
  tau.att[3] ~ dgamma(0.01,0.01)
  tau.def[3] ~ dgamma(0.01,0.01)
})

futebolConsts <- list(ngames = 306, nteams = 18, hometeam=liga14_20$h_g, awayteam=liga14_20$a_g, season=liga14_20$Temporada)

futebolData <- list(y1 = liga14_20$y_g1, y2=liga14_20$y_g2)


# 1 CADEIA
futebolInits <- list(home = 0 , mu.att = rep(0,3), mu.def = rep(0,3), tau.att = rep(1,3), tau.def = rep(1,3), theta = matrix(1,306,2), 
                     p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3), grp.att = rep(1,18), grp.def = rep(1,18), att = rep(1,18), def = rep(1,18),
                     prior.att = matrix(1/3,18,3), prior.def = matrix(1/3,18,3))

# 3 CADEIAS
futebolInits <- list(list(home = 0 , mu.att = rep(0,3), mu.def = rep(0,3), tau.att = rep(1,3), tau.def = rep(1,3), theta = matrix(1,306,2),
                          p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3), grp.att = rep(1,18), grp.def = rep(1,18), att = rep(1,18), def = rep(1,18), 
                          prior.att = matrix(1/3,18,3), prior.def = matrix(1/3,18,3)),
                     list(home = -0.9, mu.att = c(-3,0,3), mu.def = c(3,0,-3),tau.att = rep(0.6,3), tau.def = rep(0.6,3), theta = matrix(2,306,2), 
                          p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3), grp.att = rep(2,18), grp.def = rep(2,18), att = rep(2,18), def = rep(2,18),
                          prior.att = matrix(0.2,18,3), prior.def = matrix(0.2,18,3)),
                     list(home = 10, mu.att = c(-1,0,1), mu.def = c(1,0,-1),tau.att = rep(0.001,3), tau.def = rep(0.001,3), theta = matrix(5,306,2), 
                          p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3), grp.att = rep(3,18), grp.def = rep(3,18), att = rep(0.4,18), def = rep(0.4,18),
                          prior.att = matrix(1,18,3), prior.def = matrix(1,18,3)))

futebolMonitor <- c("theta","att","home","def","grp.att","grp.def") 

nimbleMCMC_fut <- nimbleMCMC(code = futebolCode, constants = futebolConsts, inits= futebolInits,data = futebolData, monitors = futebolMonitor, niter = 100000, 
                             nburnin = 50000, thin=10, nchains=3, samplesAsCodaMCMC=TRUE, WAIC = TRUE)

#############################################################################################################################################################################
######################################################################## MODELO MULTINOMIAL #################################################################################

futebolCode_m <- nimbleCode({
  
  for(g in 1:ngames){
    # OS DADOS OBSERVADOS SEGUEM UMA DISTRBUIÇÃO CATEGÓRICA DE 3 ACONTECIMENTOS
    y[g,1:3] ~ dmulti(theta[g,1:3], 1)
    
    # PROBABILIDADE DO RESULTADO K (VITORIA CASA, VITORIA FORA, EMPATE) PARA O JOGO G
    for(k in 1:3){
      theta[g,k] <- phi[g,k] / sum(phi[g,1:3]) 
    }

    log(phi[g,1]) <- home + att[hometeam[g]] + def[awayteam[g]] #RESULTADO SER VITORIA CASA
    log(phi[g,2]) <- att[awayteam[g]] + def[hometeam[g]]        #RESULTADO SER VITORIA FORA
    phi[g,3] ~ dunif(0.001,10)                                  #RESULTADO SER EMPATE
  }

  home ~ dnorm(0,0.0001)
  
  for (t in 1:nteams){
    att.star[t] ~ dnorm(mu.att,tau.att)
    def.star[t] ~ dnorm(mu.def,tau.def)
    att[t] <- att.star[t] - mean(att.star[1:nteams])
    def[t] <- def.star[t] - mean(def.star[1:nteams])
  }

  mu.att ~ dnorm(0,0.001)
  mu.def ~ dnorm(0,0.001)
  tau.att ~ dgamma(0.01,0.01)
  tau.def ~ dgamma(0.01,0.01)
})



futebolConsts_m <- list(ngames = 306, nteams = 18, hometeam = liga14_20$h_g, awayteam = liga14_20$a_g)

# VARIÁVEIS DUMMY QUE INDICAM SE O RESULTADO OCORREU OU NÃO NO JOGO G
futebolData_m <- list(y=as.matrix(cbind(liga14_20$Vitoria_casa,liga14_20$Vitoria_fora,liga14_20$Empate)))

# 1 CADEIA
futebolInits_m <- list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1, phi=matrix(1/3,306,3), att.star = rep(1,18), def.star = rep(1,18))

# 3 CADEIAS
futebolInits_m <- list(list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1, phi=matrix(1/3,306,3), att.star = rep(1,18), def.star = rep(1,18)),
                       list(home = -2, mu.att = 1, mu.def = 1, tau.att = 3, tau.def = 3, phi=matrix(1/2,306,3), att.star = rep(0.2,18), def.star = rep(0.2,18)),
                       list(home = 10, mu.att = 2, mu.def = 2, tau.att = 0.3, tau.def = 0.3, phi=matrix(1/4,306,3), att.star = rep(4,18), def.star = rep(4,18)))

futebolMonitor_m <- c("theta","phi","home","att","def")

nimbleMCMC_fut_m <- nimbleMCMC(code = futebolCode_m, constants = futebolConsts_m, inits= futebolInits_m, data = futebolData_m, monitors = futebolMonitor_m, 
                               niter = 100000, nburnin = 50000, nchains = 3, thin = 10, samplesAsCodaMCMC = TRUE, WAIC = TRUE)

