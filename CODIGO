
#PACOTES EM USO
library(nimble, warn.conflicts = FALSE)
library(ggplot2)
library(reshape2)
library(gridExtra)
library(tidyr)
library(MCMCvis)
library(BayesFactor)
library(bayestestR)
library(plyr)
library(readxl)
library(tidyverse)
library(randomcoloR)
library(doParallel)
library(parallel)
library(ggrepel)
library(sysfonts)
library(showtext)



futebolCode <- nimbleCode({
  
  # VEROSIMILHANÇA E MODELO DOS EFEITOS ALEATÓRIOS PARA O VALOR ESPERADO DE GOLOS
  for (g in 1:ngames) {
    # Observed number of goals scored by each team
    y1[g] ~ dpois(theta[g,1])
    y2[g] ~ dpois(theta[g,2])
    # Predictive distribution for the number of goals scored
    #ynew[g,1] ~ dpois(theta[g,1])
    #ynew[g,2] ~ dpois(theta[g,2])
    # Average Scoring intensities (accounting for mixing components)
    log(theta[g,1]) <-  home + att[hometeam[g]] + def[awayteam[g]] #golos marcados pela equipa de casa
    log(theta[g,2]) <-  att[awayteam[g]] + def[hometeam[g]]        #golos marcados pela equipa de fora
  }

  
#   # 1. BASIC MODEL FOR THE HYPERPARAMETERS
#   # prior on the home effect
#   #mu ~ dnorm(0,0.0001)
#   # for (s in 1:nseasons){
#   # home[s] ~ dnorm(0,0.0001)
#   # }
#   home ~ dnorm(0,0.0001)
#   # Trick to code the ''sum-to-zero'' constraint
#   for (t in 1:nteams){
#     #home[t] ~ dnorm(0,0.0001)
#     att.star[t] ~ dnorm(mu.att,tau.att)
#     def.star[t] ~ dnorm(mu.def,tau.def)
#     att[t] <- att.star[t] - mean(att.star[1:nteams])
#     def[t] <- def.star[t] - mean(def.star[1:nteams])
#   }
# 
#   # priors on the random effects
#   mu.att ~ dnorm(0,0.001)
#   mu.def ~ dnorm(0,0.001)
#   tau.att ~ dgamma(0.01,0.01)
#   tau.def ~ dgamma(0.01,0.01)
# 
# })


# 2. MIXTURE MODEL FOR THE HYPERPARAMETERS
# prior on the home effect
home ~ dnorm(0,0.0001)
# Mixture parameters & components (''sum-to-zero'' constraint)
for (t in 1:nteams){
  grp.att[t] ~ dcat(p.att[t,1:3])
  grp.def[t] ~ dcat(p.def[t,1:3])
  att[t] ~ dt(mu.att[grp.att[t]],tau.att[grp.att[t]],4)
  def[t] ~ dt(mu.def[grp.def[t]],tau.def[grp.def[t]],4)
  att.star[t] <- att[t] - mean(att[1:nteams])
  def.star[t] <- def[t] - mean(def[1:nteams])
  # Priors on the mixture parameter (team specific)
  p.att[t,1:3] ~ ddirch(prior.att[t,1:3])
  p.def[t,1:3] ~ ddirch(prior.def[t,1:3])
}
# Priors on the random effects
# group 1: bottom-table teams
mu.att[1] ~ T(dnorm(0,0.001),-3,0)
mu.def[1] ~ T(dnorm(0,0.001),0,3)
tau.att[1] ~ dgamma(0.01,0.01)
tau.def[1] ~ dgamma(0.01,0.01)
# group 2: mid-table teams
mu.att[2] <-0
mu.def[2] <-0
tau.att[2] ~ dgamma(0.01,0.01)
tau.def[2] ~ dgamma(0.01,0.01)
# group 3: top-table teams
mu.att[3] ~ T(dnorm(0,0.001),0,3)
mu.def[3] ~ T(dnorm(0,0.001),-3,0)
tau.att[3] ~ dgamma(0.01,0.01)
tau.def[3] ~ dgamma(0.01,0.01)
})


futebolConsts <- list(ngames = 306, nteams = 18, hometeam=liga14_20$h_g, 
                      awayteam=liga14_20$a_g, season=liga14_20$Temporada)

#dados do índice para a equipa de fora e da casa e o número de golos marcado por cada
futebolData <- list(y1 = liga14_20$y_g1, y2=liga14_20$y_g2)




# futebolInits <- list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1,
#                           theta = matrix(1,306,2), att.star = rep(1,18), def.star = rep(1,18))

futebolInits <- list(list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1,
                          theta = matrix(1,306,2), att.star = rep(1,18), def.star = rep(1,18)),
                list(home = -0.9, mu.att = -0.6, mu.def = -0.6, tau.att = 0.6, tau.def = 0.6,
                          theta = matrix(2,306,2), att.star = rep(0,18), def.star = rep(0,18)),
                list(home = 1, mu.att = 1, mu.def = 1, tau.att = 0.001, tau.def = 0.001,
                          theta = matrix(5,306,2), att.star = rep(0.4,18), def.star = rep(0.4,18)))

# futebolInits <- list(list(home = 12, mu.att = 3, mu.def = 2, tau.att = 11, tau.def = 11,
#                           theta = matrix(9,306,2), att.star = rep(0,18), def.star = rep(0.6,18)),
#                      list(home = -0.9, mu.att = -0.6, mu.def = -0.6, tau.att = 0.6, tau.def = 0.6,
#                           theta = matrix(2,306,2), att.star = rep(0,18), def.star = rep(20,18)),
#                      list(home = 100, mu.att = 1, mu.def = 50, tau.att = 0.001, tau.def = 0.001,
#                           theta = matrix(5,306,2), att.star = rep(0.4,18), def.star = rep(-2,18)))


futebolInits <- list(home = 0, mu.att = 0, mu.def = 0, tau.att = 1, tau.def = 1,
                          theta = matrix(1,306,2), att.star = rep(1,18), def.star = rep(1,18))



futebolInits <- list(list(home=0 , mu.att = rep(0,3), mu.def = rep(0,3), tau.att = rep(1,3), tau.def = rep(1,3),
                     theta = matrix(1,306,2), p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3),
                     grp.att = rep(1,18), grp.def = rep(1,18), att = rep(1,18), def = rep(1,18),
                     prior.att = matrix(1/3,18,3), prior.def = matrix(1/3,18,3)),
                list(home=-0.9, mu.att = c(-3,0,3), mu.def = c(3,0,-3),tau.att = rep(0.6,3), tau.def = rep(0.6,3),
                     theta = matrix(2,306,2), p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3),
                     grp.att = rep(2,18), grp.def = rep(2,18), att = rep(2,18), def = rep(2,18),
                     prior.att = matrix(0.2,18,3), prior.def = matrix(0.2,18,3)),
                list(home=10, mu.att = c(-1,0,1), mu.def = c(1,0,-1),tau.att = rep(0.001,3), tau.def = rep(0.001,3),
                     theta = matrix(5,306,2), p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3),
                     grp.att = rep(3,18), grp.def = rep(3,18), att = rep(0.4,18), def = rep(0.4,18),
                     prior.att = matrix(1,18,3), prior.def = matrix(1,18,3)))


futebolInits <- list(home=0 , mu.att = rep(0,3), mu.def = rep(0,3), tau.att = rep(1,3), tau.def = rep(1,3),
                     theta = matrix(1,306,2), p.att = matrix(1/3,18,3), p.def = matrix(1/3,18,3),
                     grp.att = rep(1,18), grp.def = rep(1,18), att = rep(1,18), def = rep(1,18),
                     prior.att = matrix(1/3,18,3), prior.def = matrix(1/3,18,3))



#p.att = matrix(1/3,26,3), p.def = matrix(1/3,26,3),
#grp.att = rep(1,18), grp.def = rep(1,18), #att = rep(1,26), def = rep(1,26),


#parametros para guardar na matriz
futebolMonitor <- c("theta","att","home","def")
futebolMonitor <- c("theta","att","home","def","grp.att","grp.def")

start.time <- Sys.time()

nimbleMCMC_fut <- nimbleMCMC(code = futebolCode, constants = futebolConsts, inits= futebolInits,
                             data = futebolData, monitors = futebolMonitor, niter = 100000, nburnin = 50000, 
                             thin=10, nchains=3, samplesAsCodaMCMC=TRUE, WAIC = TRUE)

end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
